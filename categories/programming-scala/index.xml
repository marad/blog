<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming Scala on Marad Blog</title>
    <link>https://blog.radoszewski.pl/categories/programming-scala/</link>
    <description>Recent content in Programming Scala on Marad Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Nov 2015 12:17:17 +0000</lastBuildDate>
    
	<atom:link href="https://blog.radoszewski.pl/categories/programming-scala/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The Cake Pattern</title>
      <link>https://blog.radoszewski.pl/post/cake-pattern/</link>
      <pubDate>Tue, 10 Nov 2015 12:17:17 +0000</pubDate>
      
      <guid>https://blog.radoszewski.pl/post/cake-pattern/</guid>
      <description>Let&amp;rsquo;s think a bit about how you should structure your program. If your codebase has less than 500 lines of code it is not really that hard to manage. You can simply manually create the objects and their dependencies to construct your application. The problem emerges when your codebase grows. Managing hundreds of dependencies manually is a tedious task. We need some kind of mechanism to do that for us.</description>
    </item>
    
    <item>
      <title>The Mighty Monad</title>
      <link>https://blog.radoszewski.pl/post/mighty-monad/</link>
      <pubDate>Sun, 31 May 2015 11:52:40 +0000</pubDate>
      
      <guid>https://blog.radoszewski.pl/post/mighty-monad/</guid>
      <description>When you begin to learn functional programming everybody is telling you that pure functions with no side effects are the only way to go. This is fine up to the point. Sooner or later you will hear about monads. This post tries to explain what the monad is and why you should use it.
Prerequisites To fully understand the examples here you should know at least basics of Scala language.</description>
    </item>
    
    <item>
      <title>No one expects the Spanish functions</title>
      <link>https://blog.radoszewski.pl/post/spanish-functions/</link>
      <pubDate>Sun, 26 Apr 2015 15:07:45 +0000</pubDate>
      
      <guid>https://blog.radoszewski.pl/post/spanish-functions/</guid>
      <description>Scala, as a functional language, treats functions as first class citizens. Of course it&amp;rsquo;s also object oriented language. Those two paradigms can be seen as conflicting with each other. In this post I&amp;rsquo;d like to show you some different ways of creating a functions in Scala to show that these two worlds can coexist.
Foreword Function Let us start by defining what a function is. Wikipedia supplies us with this:</description>
    </item>
    
  </channel>
</rss>